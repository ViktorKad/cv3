{
  "_args": [
    [
      {
        "raw": "https://github.com/ViktorKad/jn.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/ViktorKad/jn.git",
        "spec": "git+https://github.com/ViktorKad/jn.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ViktorKad/jn.git",
          "sshUrl": "git+ssh://git@github.com/ViktorKad/jn.git",
          "httpsUrl": "git+https://github.com/ViktorKad/jn.git",
          "gitUrl": "git://github.com/ViktorKad/jn.git",
          "shortcut": "github:ViktorKad/jn",
          "directUrl": "https://raw.githubusercontent.com/ViktorKad/jn/master/package.json"
        }
      },
      "/mnt/c/Users/Viktor/Documents/GitHub/cv3"
    ]
  ],
  "_from": "git+https://github.com/ViktorKad/jn.git",
  "_id": "jn@0.8.1",
  "_inCache": true,
  "_location": "/jn",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/ViktorKad/jn.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/ViktorKad/jn.git",
    "spec": "git+https://github.com/ViktorKad/jn.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ViktorKad/jn.git",
      "sshUrl": "git+ssh://git@github.com/ViktorKad/jn.git",
      "httpsUrl": "git+https://github.com/ViktorKad/jn.git",
      "gitUrl": "git://github.com/ViktorKad/jn.git",
      "shortcut": "github:ViktorKad/jn",
      "directUrl": "https://raw.githubusercontent.com/ViktorKad/jn/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "git+https://github.com/ViktorKad/jn.git#3bea07da49e7f66f39d2ca0264f29dc7c0a24e99",
  "_shasum": "58ec3c6ca3b5f40c56730ca13f5ef86abce56c84",
  "_shrinkwrap": null,
  "_spec": "https://github.com/ViktorKad/jn.git",
  "_where": "/mnt/c/Users/Viktor/Documents/GitHub/cv3",
  "author": {
    "name": "ViktorKad"
  },
  "bin": {
    "jn": "./bin/jn"
  },
  "dependencies": {
    "stylus": "*"
  },
  "description": "### Имя шаблона В имени шаблона допускается использование латинских букв, цифр и знаков минус и подчеркивания.",
  "devDependencies": {},
  "gitHead": "3bea07da49e7f66f39d2ca0264f29dc7c0a24e99",
  "license": "MIT",
  "main": "./bin/jn",
  "name": "jn",
  "optionalDependencies": {},
  "readme": "## Шаблонизатор для web-приложений.\n\n### Имя шаблона\nВ имени шаблона допускается использование латинских букв, цифр и знаков минус и подчеркивания.\n\n### Общий синтаксис текстового шаблона\nТекстовый шаблон - это просто строка с заменяемыми блоками.\nБлоки начинаются с '[% ' и заканчиваются ' %]'.\nВ простейшем случае через '[% ... %]' можно вызвать другой шаблон, заменив этот блок его содержимым. Для этого достаточно написать [% имя_шиблона %]. Будет подставлен ближайший найденый шаблон с таким именем\n\nТак же можно использовать префиксы, например `lang` ([% lang:ключ_перевода %]), для того чтобы подставлять переводы из файла переводов, прописанного в config.json\n\n### Поддерживаемые префиксы:\n\n`lang` - ищет перевод по переданному в него имени\n\n### Описание шаблона в html файле\nВ любом блоке можно создать файл `имя_блока.jn.html`. При сборке этот файл будет расцениваться, как файл содержащий шаблоны.\nКаждый шаблон в этом файле начинается с имени шаблона, записанного как `<!--: имя_шаблона :-->`.\nИ заканчивается при нахождении имени следующего шаблона или конца файла.\n\n### Описание шаблона в js файле\nПомимо файла `имя_блока.jn.html` в любом блоке можно создать файл `имя_блока.jn.js`. При сборке этот файл будет помещен в анонимную функцию и как есть записан в собранный файл. Такие файлы следует использовать для создания текстовых шаблонов, которые не являются html сущностями и шаблонов функций.\n```jn.create(name, tmpl)``` позволяет создать текстовый шаблон или шаблон функции.\n\n### Уровни переопределения\n\n`config.json`\n\n* lang_file - json файл с переводами\n* lang_default - ключ языка, который будет использован при отсутствии перевода на собираемый язык\n* lang_list - список собираемых языков\n* tmpl_levels - собираемые уровни переопределения шаблонов в порядке от старшего к младшему\n* init_tmpl - шаблон, который в собранном виде будет записан в соответствующий index.{lang}.html\n\n```json\n{\n    \"lang_file\": \"lang.json\",\n    \"lang_default\": \"ru\",\n    \"lang_list\": [\"ru\", \"en\"],\n    \"tmpl_levels\": [\n        [\"common\", \"desktop\"],\n        [\"common\", \"tablet\"],\n        [\"common\", \"touch\"]\n    ],\n    \"init_tmpl\": \"document\"\n}\n```\n\nСтруктура проекта и сборка\n\n//TODO: Описать\n\n```\n|-/ app\n  |-/ common\n    |-/ document\n      |- document.jn.html\n      |- document.jn.js\n    |-/ body\n      |- body.jn.html\n      |- body.jn.js\n      |- body.styl\n    |-/ menu\n      |- menu.jn.html\n      |- menu.styl\n  |-/ desktop\n    |-/ document\n      |- document.jn.js\n    |-/ body\n      |- body.jn.html\n      |- body.styl\n      |- body.js\n    |-/ menu\n    |-/ scroller\n  |-/ touch\n    |-/ document\n      |- document.jn.html\n    |-/ body\n      |- body.jn.html\n      |- body.styl\n      |- body.js\n    |-/ menu\n    |-/ swiper\n  |-/ tablet\n    |-/ document\n    |-/ body\n    |-/ swiper\n  |- build\n    |-/ common-desktop\n      |- all.css\n      |- all.js\n      |- index.en.html\n      |- index.ru.html\n    |-/ common-touch\n      |- all.css\n      |- all.js\n      |- index.en.html\n      |- index.ru.html\n    |-/ common-tablet\n      |- all.css\n      |- all.js\n      |- index.en.html\n      |- index.ru.html\n```\n\n\n//TODO: починить сборку js - ^M\n//TODO: неверно вызываются шаблоны, если из верхнего уровня вызывается нижний\n//TODO: тесты",
  "readmeFilename": "readme.md",
  "version": "0.8.1"
}
